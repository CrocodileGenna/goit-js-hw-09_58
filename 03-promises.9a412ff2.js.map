{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,WAyBjC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACTC,QAAQC,IAAIT,GACRI,GAEFF,EACEQ,EAAAtB,GAASuB,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,QAKpDG,EACEO,EAAAtB,GAASuB,OAAOG,QAAQ,sBAAqCD,OAAfd,EAAS,QAAYc,OAANb,EAAM,O,GAEpEA,E,IAvCPV,EAAKC,KAAKwB,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAEC,iBAOF,IANA,IAAMvB,EAAawB,OAAO5B,EAAKI,WAAWyB,OACpCxB,EAAYuB,OAAO5B,EAAKK,UAAUwB,OAClCvB,EAAcsB,OAAO5B,EAAKM,YAAYuB,OAExCC,EAAqB1B,EAEhB2B,EAAI,EAAGA,GAAKzB,EAAayB,IAChCvB,EAAcuB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGC,EAACD,EAADC,EAAGC,EAAkBF,EAAlBE,mBACVjB,QAAQC,IAAI,uBAAiCI,OAARW,EAAE,QAAyBX,OAAnBY,EAAmB,M,IAEjEC,OAAM,SAAAH,G,IAAGC,EAACD,EAADC,EAAGC,EAAkBF,EAAlBE,mBACXjB,QAAQC,IAAI,sBAAgCI,OAARW,EAAE,QAAyBX,OAAnBY,EAAmB,M,IAEnEL,GAAsBzB,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import { concat } from 'lodash';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstValue: document.querySelector(\"input[name='delay']\"),\n  stepValue: document.querySelector(\"input[name='step']\"),\n  amountValue: document.querySelector(\"input[name='amount']\"),\n  button: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', renderAwait);\n\nfunction renderAwait(e) {\n  e.preventDefault();\n  const firstValue = Number(refs.firstValue.value);\n  const stepValue = Number(refs.stepValue.value);\n  const amountValue = Number(refs.amountValue.value);\n\n  let firstValuePlusStep = firstValue;\n\n  for (let i = 0; i <= amountValue; i++) {\n    createPromise(i, firstValuePlusStep)\n      .then(({ i, firstValuePlusStep }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${firstValuePlusStep}ms`);\n      })\n      .catch(({ i, firstValuePlusStep }) => {\n        console.log(`❌ Rejected promise ${i} in ${firstValuePlusStep}ms`);\n      });\n    firstValuePlusStep += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((respons, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      console.log(delay);\n      if (shouldResolve) {\n        // Fulfill\n        respons(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      }\n      // Reject\n      reject(\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","firstValue","stepValue","amountValue","button","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","respons","reject","shouldResolve","Math","random","setTimeout","console","log","$parcel$interopDefault","Notify","success","concat","failure","addEventListener","e","preventDefault","Number","value","firstValuePlusStep1","i1","then","param","i","firstValuePlusStep","catch"],"version":3,"file":"03-promises.9a412ff2.js.map"}