{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,OAAQL,SAASC,cAAc,WAyBjC,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACTC,QAAQC,IAAIT,GACRI,GAEFF,EACEQ,EAAAtB,GAASuB,OAAOC,QACd,uBAAqBb,QAAiBC,QAK5CG,EACEO,EAAAtB,GAASuB,OAAOE,QAAQ,sBAAoBd,QAAeC,OAAW,GAEvEA,EAAM,G,CAvCbV,EAAKC,KAAKuB,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAEC,iBACF,MAAMtB,EAAauB,OAAO3B,EAAKI,WAAWwB,OACpCvB,EAAYsB,OAAO3B,EAAKK,UAAUuB,OAClCtB,EAAcqB,OAAO3B,EAAKM,YAAYsB,OAE5C,IAAIC,EAAqBzB,EAEzB,IAAK,IAAI0B,EAAI,EAAGA,GAAKxB,EAAawB,IAChCtB,EAAcsB,EAAGD,GACdE,MAAK,EAACC,EAAEA,EAACC,mBAAEA,MACVf,QAAQC,IAAI,uBAAqBa,QAAUC,MAAuB,IAEnEC,OAAM,EAACF,EAAEA,EAACC,mBAAEA,MACXf,QAAQC,IAAI,sBAAoBa,QAAUC,MAAuB,IAErEJ,GAAsBxB,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import { concat } from 'lodash';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstValue: document.querySelector(\"input[name='delay']\"),\n  stepValue: document.querySelector(\"input[name='step']\"),\n  amountValue: document.querySelector(\"input[name='amount']\"),\n  button: document.querySelector('button'),\n};\n\nrefs.form.addEventListener('submit', renderAwait);\n\nfunction renderAwait(e) {\n  e.preventDefault();\n  const firstValue = Number(refs.firstValue.value);\n  const stepValue = Number(refs.stepValue.value);\n  const amountValue = Number(refs.amountValue.value);\n\n  let firstValuePlusStep = firstValue;\n\n  for (let i = 0; i <= amountValue; i++) {\n    createPromise(i, firstValuePlusStep)\n      .then(({ i, firstValuePlusStep }) => {\n        console.log(`✅ Fulfilled promise ${i} in ${firstValuePlusStep}ms`);\n      })\n      .catch(({ i, firstValuePlusStep }) => {\n        console.log(`❌ Rejected promise ${i} in ${firstValuePlusStep}ms`);\n      });\n    firstValuePlusStep += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((respons, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      console.log(delay);\n      if (shouldResolve) {\n        // Fulfill\n        respons(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      }\n      // Reject\n      reject(\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstValue","stepValue","amountValue","button","$47d4ff9957288465$var$createPromise","position","delay","Promise","respons","reject","shouldResolve","Math","random","setTimeout","console","log","$parcel$interopDefault","Notify","success","failure","addEventListener","e","preventDefault","Number","value","firstValuePlusStep1","i1","then","i","firstValuePlusStep","catch"],"version":3,"file":"03-promises.0885c75f.js.map"}