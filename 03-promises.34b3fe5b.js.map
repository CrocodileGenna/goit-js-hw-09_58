{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,yBA+BtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACTC,QAAQC,IAAIT,EAAOD,GACfE,GAEFI,EAAQ,uBAAqBN,QAAiBC,OAGhDM,EAAO,sBAAoBP,QAAeC,MAAU,GACnDA,EAAM,G,CAvCbT,EAAKC,KAAKkB,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAEC,iBACF,MAAMjB,EAAakB,OAAOtB,EAAKI,WAAWmB,OACpClB,EAAYiB,OAAOtB,EAAKK,UAAUkB,OAClCjB,EAAcgB,OAAOtB,EAAKM,YAAYiB,OAE5C,IAAIC,EAAqBpB,EAEzB,IAAK,IAAIqB,EAAI,EAAGA,GAAKnB,EAAamB,IAChCR,QAAQC,IAAIO,GAEZlB,EAAckB,EAAGD,GACdE,MAAK,EAACC,EAAEA,EAACC,mBAAEA,MACVC,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBJ,QAAUC,MAAuB,IAGzDI,OAAM,EAACL,EAAEA,EAACC,mBAAEA,MACXC,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBN,QAAUC,MAAuB,IAG3DJ,GAAsBnB,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import { concat } from 'lodash';\nimport Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n  firstValue: document.querySelector(\"input[name='delay']\"),\n  stepValue: document.querySelector(\"input[name='step']\"),\n  amountValue: document.querySelector(\"input[name='amount']\"),\n};\n\nrefs.form.addEventListener('submit', renderAwait);\n\nfunction renderAwait(e) {\n  e.preventDefault();\n  const firstValue = Number(refs.firstValue.value);\n  const stepValue = Number(refs.stepValue.value);\n  const amountValue = Number(refs.amountValue.value);\n\n  let firstValuePlusStep = firstValue;\n\n  for (let i = 1; i <= amountValue; i++) {\n    console.log(i);\n\n    createPromise(i, firstValuePlusStep)\n      .then(({ i, firstValuePlusStep }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${firstValuePlusStep}ms`\n        );\n      })\n      .catch(({ i, firstValuePlusStep }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${firstValuePlusStep}ms`\n        );\n      });\n    firstValuePlusStep += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((respons, reject) => {\n    setTimeout(() => {\n      console.log(delay, position);\n      if (shouldResolve) {\n        // Fulfill\n        respons(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      // Reject\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","firstValue","stepValue","amountValue","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","respons","reject","setTimeout","console","log","addEventListener","e","preventDefault","Number","value","firstValuePlusStep1","i1","then","i","firstValuePlusStep","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.34b3fe5b.js.map"}